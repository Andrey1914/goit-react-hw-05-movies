{"version":3,"file":"static/js/415.2d3a47b9.chunk.js","mappings":"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","sources":["components/MoviesList/MovieListStyled.jsx","components/MoviesListItem/MoviesListItemStyled.jsx","components/MoviesListItem/MoviesListItem.jsx","components/MoviesList/MovieList.jsx","pages/Home.jsx","services/api.jsx","utils/Mapper.jsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nexport const List = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: ${p => p.theme.space[4]}px;\n  width: 90%;\n  margin-left: auto;\n  margin-right: auto;\n\n  @media (min-width: 768px) {\n    max-width: 592px;\n  }\n  @media (min-width: 1200px) {\n    max-width: 1200px;\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  max-width: 288px;\n  border-radius: ${p => p.theme.radii.small};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  margin-left: auto;\n  margin-right: auto;\n  :hover,\n  :focus {\n    transform: scale(1.03);\n    cursor: zoom-in;\n  }\n  @media (max-width: 320px) {\n    max-width: 300px;\n  }\n`;\n\n// export const Link = styled.a`\n//   display: flex;\n//   flex-direction: column;\n//   height: 100%;\n// `;\n\nexport const Image = styled.img`\n  /* object-fit: cover; */\n`;\nexport const Title = styled.h2`\n  font-size: ${p => p.theme.fontSizes[2]}px;\n  font-weight: ${p => p.theme.fontWeigths[2]};\n  color: ${p => p.theme.colors.black};\n`;\nexport const Vote = styled.p`\n  font-size: ${p => p.theme.fontSizes[2]}px;\n  font-weight: ${p => p.theme.fontWeigths[2]};\n  color: ${p => p.theme.colors.black};\n`;\n","import { Box } from 'components/Box';\nimport propTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport { Item, Image, Title, Vote } from './MoviesListItemStyled';\n\nexport default function MoviesListItem({ id, title, poster, vote }) {\n  const location = useLocation();\n  return (\n    <Item>\n      <Link\n        to={`/movies/${id}`}\n        state={{ from: location.pathname + location.search }}\n      >\n        <Box display=\"flex\" flexDirection=\"column\" height=\"100%\">\n          <Box\n            display=\"flex\"\n            flexGrow=\"1\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n            p={15}\n          >\n            <Title>{title ? title : 'No title'}</Title>\n            <Vote>Vote: {vote}</Vote>\n          </Box>\n\n          <Image\n            src={\n              poster ? `https://image.tmdb.org/t/p/w500/${poster}` : 'No Poster'\n            }\n            alt={title}\n          />\n        </Box>\n      </Link>\n    </Item>\n  );\n}\n\nMoviesListItem.propTypes = {\n  id: propTypes.number.isRequired,\n  title: propTypes.string.isRequired,\n  poster: propTypes.string.isRequired,\n  vote: propTypes.number.isRequired,\n};\n","import propTypes from 'prop-types';\nimport { List } from './MovieListStyled';\nimport MoviesListItem from 'components/MoviesListItem/MoviesListItem';\nimport { Box } from 'components/Box';\n\nexport default function MoviesList({ movies }) {\n  return (\n    <Box as=\"section\" py={5}>\n      <List>\n        {movies.map(({ id, original_title, poster_path, vote_average }) => {\n          return (\n            <MoviesListItem\n              key={id}\n              id={id}\n              title={original_title}\n              poster={poster_path}\n              vote={vote_average}\n            />\n          );\n        })}\n      </List>\n    </Box>\n  );\n}\n\nMoviesList.propTypes = {\n  movies: propTypes.arrayOf(\n    propTypes.exact({\n      id: propTypes.number.isRequired,\n      original_title: propTypes.string.isRequired,\n      poster_path: propTypes.string.isRequired,\n      vote_average: propTypes.number.isRequired,\n    })\n  ),\n};\n","import MoviesList from 'components/MoviesList/MovieList';\nimport { useState, useEffect } from 'react';\nimport { fetchTrendingMovies } from 'services/api';\nimport { Mapper } from 'utils/Mapper';\n\nexport default function Home() {\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchTrendingMovies().then(movies => {\n      const mappedMovies = Mapper(movies.results);\n      setMovies(mappedMovies);\n    });\n  }, []);\n  return movies && <MoviesList movies={movies} />;\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a9c60f9b21a095b96ccbe9e4f4d7a273';\n\nexport async function fetchMoviesBySearch(query) {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`;\n  return await axios.get(`${url}`).then(res => res.data);\n}\n\nexport async function fetchTrendingMovies() {\n  const trendingURL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${1}`;\n  return await axios.get(`${trendingURL}`).then(res => res.data);\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const detailsURL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  return await axios.get(`${detailsURL}`).then(response => response.data);\n}\n\nexport async function fetchMovieCast(movieId) {\n  const castURL = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  return await axios.get(`${castURL}`).then(response => response.data);\n}\n\nexport async function fetchMoviesReviews(movieId) {\n  const reviewsURL = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  return await axios.get(`${reviewsURL}`).then(response => response.data);\n}\n","export const Mapper = data => {\n  return data.map(({ poster_path, id, original_title, vote_average }) => ({\n    poster_path,\n    id,\n    original_title,\n    vote_average,\n  }));\n};\n"],"names":["List","styled","p","theme","space","Item","radii","small","Image","Title","fontSizes","fontWeigths","colors","black","Vote","MoviesListItem","id","title","poster","vote","location","useLocation","to","state","from","pathname","search","Box","display","flexDirection","height","flexGrow","justifyContent","alignItems","src","alt","MoviesList","movies","as","py","map","original_title","poster_path","vote_average","Home","useState","setMovies","useEffect","fetchTrendingMovies","then","mappedMovies","Mapper","results","BASE_URL","API_KEY","fetchMoviesBySearch","query","url","axios","res","data","trendingURL","fetchMovieDetails","movieId","detailsURL","response","fetchMovieCast","castURL","fetchMoviesReviews","reviewsURL"],"sourceRoot":""}