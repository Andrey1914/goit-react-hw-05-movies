{"version":3,"file":"static/js/207.fccc14cb.chunk.js","mappings":"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","sources":["components/Cast/CastStyled.jsx","components/Cast/Cast.jsx","pages/CastPage.jsx","services/api.jsx"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Line = styled.div`\n  width: 100%;\n  height: 0.2rem;\n  background: linear-gradient(45deg, #57576f, #373838);\n`;\n\nexport const CastSection = styled.section`\n  padding: 2rem 0;\n`;\n\nexport const CastContainer = styled.div`\n  margin: 0 auto;\n  max-width: 18rem;\n\n  @media all and (min-width: ${({ theme }) => theme.breakpoints.sm}) {\n    max-width: 31rem;\n  }\n\n  @media all and (min-width: ${({ theme }) => theme.breakpoints.md}) {\n    max-width: 46rem;\n    display: flex;\n    gap: 1rem;\n  }\n\n  @media all and (min-width: ${({ theme }) => theme.breakpoints.lg}) {\n    max-width: 64rem;\n    gap: 2rem;\n  }\n`;\n\nexport const CastsList = styled.ul`\n  display: flex;\n  flex-wrap: wrap;\n  gap: 1rem;\n  margin-left: auto;\n  margin-right: auto;\n`;\n\nexport const Item = styled.li`\n  width: 12rem;\n  border-radius: ${({ theme }) => theme.radii.small};\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n  transition: transform 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  box-shadow: 0px 1px 3px 0px rgba(0, 0, 0, 0.2),\n    0px 1px 1px 0px rgba(0, 0, 0, 0.14), 0px 2px 1px -1px rgba(0, 0, 0, 0.12);\n`;\n\nexport const ActorContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nexport const Photo = styled.img`\n  width: 100%;\n  height: auto;\n  border-top-left-radius: ${({ theme }) => theme.radii.small};\n  border-top-right-radius: ${({ theme }) => theme.radii.small};\n`;\n\nexport const ActorNameContainer = styled.div`\n  flex-grow: 1;\n  padding: 1rem;\n`;\n\nexport const ActorName = styled.h3`\n  font-size: 1rem;\n  font-weight: ${({ theme }) => theme.fontWeights.normal};\n  color: ${({ theme }) => theme.color.dark};\n`;\n\nexport const NoInformationText = styled.p`\n  display: flex;\n  justify-content: center;\n  padding: 1rem;\n  font-weight: ${({ theme }) => theme.fontWeights.normal};\n`;\n","import propTypes from 'prop-types';\nimport placeholder from '../../default-pic/dog-placeholder.webp';\nimport {\n  Line,\n  CastSection,\n  CastContainer,\n  CastsList,\n  Item,\n  ActorContainer,\n  Photo,\n  ActorName,\n  ActorNameContainer,\n} from './CastStyled';\n\nexport default function Cast({ cast }) {\n  return (\n    <>\n      <Line />\n      <CastSection>\n        <CastContainer>\n          <CastsList>\n            {cast.map(({ id, name, photo }) => (\n              <Item key={id}>\n                <ActorContainer>\n                  {photo ? (\n                    <Photo\n                      src={`https://image.tmdb.org/t/p/w300/${photo}`}\n                      alt={name}\n                    />\n                  ) : (\n                    <img\n                      src={placeholder}\n                      alt={name}\n                      width=\"100%\"\n                      height=\"100%\"\n                    />\n                  )}\n                  <ActorNameContainer>\n                    <ActorName>{name}</ActorName>\n                  </ActorNameContainer>\n                </ActorContainer>\n              </Item>\n            ))}\n          </CastsList>\n        </CastContainer>\n      </CastSection>\n    </>\n  );\n}\n\nCast.propTypes = {\n  cast: propTypes.arrayOf(\n    propTypes.shape({\n      id: propTypes.number,\n      name: propTypes.string,\n      photo: propTypes.string,\n    })\n  ).isRequired,\n};\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { fetchMovieCast } from 'services/api';\nimport Cast from 'components/Cast/Cast';\nimport { NoInformationText } from 'components/Cast/CastStyled';\n\nexport default function CastPage() {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState(null);\n\n  useEffect(() => {\n    fetchMovieCast(movieId).then(r => {\n      const mappedActors = [];\n      r.cast.map(({ id, original_name, profile_path }) => {\n        const actor = {\n          id: id,\n          name: original_name,\n          photo: profile_path,\n        };\n        return mappedActors.push(actor);\n      });\n      setCast(mappedActors);\n    });\n  }, [movieId]);\n\n  return cast && cast.length > 0 ? (\n    <Cast cast={cast} />\n  ) : (\n    <NoInformationText>Sorry, we have no information here.</NoInformationText>\n  );\n}\n","import axios from 'axios';\n\nconst BASE_URL = 'https://api.themoviedb.org/3';\nconst API_KEY = 'a9c60f9b21a095b96ccbe9e4f4d7a273';\n\nexport async function fetchMoviesBySearch(query) {\n  const url = `${BASE_URL}/search/movie?api_key=${API_KEY}&query=${query}&page=1`;\n  return await axios.get(`${url}`).then(res => res.data);\n}\n\nexport async function fetchTrendingMovies() {\n  const trendingURL = `${BASE_URL}/trending/movie/day?api_key=${API_KEY}&page=${1}`;\n  return await axios.get(`${trendingURL}`).then(res => res.data);\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const detailsURL = `${BASE_URL}/movie/${movieId}?api_key=${API_KEY}&language=en-US`;\n  return await axios.get(`${detailsURL}`).then(response => response.data);\n}\n\nexport async function fetchMovieCast(movieId) {\n  const castURL = `${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`;\n  return await axios.get(`${castURL}`).then(response => response.data);\n}\n\nexport async function fetchMoviesReviews(movieId) {\n  const reviewsURL = `${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}&language=en-US&page=1`;\n  return await axios.get(`${reviewsURL}`).then(response => response.data);\n}\n"],"names":["Line","styled","CastSection","CastContainer","theme","breakpoints","sm","md","lg","CastsList","Item","radii","small","ActorContainer","Photo","ActorNameContainer","ActorName","fontWeights","normal","color","dark","NoInformationText","Cast","cast","map","id","name","photo","src","alt","placeholder","width","height","CastPage","movieId","useParams","useState","setCast","useEffect","fetchMovieCast","then","r","mappedActors","actor","original_name","profile_path","push","length","BASE_URL","API_KEY","fetchMoviesBySearch","query","url","axios","res","data","fetchTrendingMovies","trendingURL","fetchMovieDetails","detailsURL","response","castURL","fetchMoviesReviews","reviewsURL"],"sourceRoot":""}